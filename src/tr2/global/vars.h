#pragma once

#include "global/types.h"

#include <libtrx/gfx/context.h>

#include <SDL2/SDL.h>

extern const char *g_TR2XVersion;
extern GAME_FLOW_DIR g_GF_OverrideDir;

extern int16_t g_RoomsToDraw[MAX_ROOMS_TO_DRAW];
extern int16_t g_RoomsToDrawCount;

extern void *g_XBuffer;
extern const float g_RhwFactor;
extern uint16_t *g_TexturePageBuffer16[MAX_TEXTURE_PAGES];
extern PHD_TEXTURE g_TextureInfo[MAX_TEXTURES];

extern SDL_Window *g_SDLWindow;

extern uint32_t g_PerspectiveDistance;
extern int32_t g_CineTrackID;
extern int32_t g_CineTickRate;
extern int32_t g_FlipEffect;
extern uint32_t g_AssaultBestTime;
extern void (*g_EffectRoutines[])(ITEM *item);
extern int16_t g_CineTargetAngle;
extern int32_t g_OverlayStatus;
extern int16_t g_Inv_MainObjectsCount;
extern BOOL g_GymInvOpenEnabled;
extern int16_t g_Inv_Chosen;
extern INVENTORY_MODE g_Inv_Mode;
extern int32_t g_JumpPermitted;
extern int16_t g_LaraOldSlideAngle;
extern int32_t g_FadeValue;
extern int32_t g_FadeLimit;
extern int32_t g_FadeAdder;
extern int32_t g_MidSort;
extern float g_ViewportAspectRatio;
extern int32_t g_XGenY1;
extern int32_t g_XGenY2;
extern GOURAUD_ENTRY g_GouraudTable[256];
extern int32_t g_PhdWinTop;
extern PHD_SPRITE g_PhdSprites[];
extern int32_t g_LsAdder;
extern float g_FltWinBottom;
extern float g_FltResZBuf;
extern float g_FltResZ;
extern int32_t g_PhdWinHeight;
extern int32_t g_PhdWinCenterX;
extern int32_t g_PhdWinCenterY;
extern int16_t g_LsYaw;
extern float g_FltWinTop;
extern SORT_ITEM g_SortBuffer[];
extern float g_FltWinLeft;
extern int32_t g_PhdFarZ;
extern float g_FltRhwOPersp;
extern int32_t g_PhdWinBottom;
extern int32_t g_PhdPersp;
extern int32_t g_PhdWinLeft;
extern int16_t g_Info3DBuffer[];
extern int32_t g_PhdWinMaxX;
extern int32_t g_PhdNearZ;
extern float g_FltResZORhw;
extern float g_FltFarZ;
extern float g_FltWinCenterX;
extern float g_FltWinCenterY;
extern float g_FltPerspONearZ;
extern float g_FltRhwONearZ;
extern int32_t g_PhdWinMaxY;
extern float g_FltNearZ;
extern int32_t g_RandomTable[32];
extern float g_FltPersp;
extern int16_t *g_Info3DPtr;
extern int32_t g_PhdWinWidth;
extern int32_t g_PhdViewDistance;
extern int16_t g_LsPitch;
extern int16_t g_ShadesTable[32];
extern DEPTHQ_ENTRY g_DepthQTable[32];
extern int32_t g_LsDivider;
extern PHD_VBUF g_PhdVBuf[];
extern uint8_t *g_TexturePageBuffer8[MAX_TEXTURE_PAGES];
extern float g_FltWinRight;
extern XYZ_32 g_LsVectorView;
extern float g_WibbleTable[32];
extern int32_t g_PhdWinRight;
extern int32_t g_SurfaceCount;
extern SORT_ITEM *g_Sort3DPtr;
extern int32_t g_WibbleOffset;
extern int32_t g_IsWibbleEffect;
extern int32_t g_IsWaterEffect;
extern int8_t g_IsShadeEffect;
extern PALETTEENTRY g_GamePalette16[256];
extern int32_t g_IsChunkyCamera;
extern int32_t g_NoInputCounter;
extern int32_t g_FlipTimer;
extern int32_t g_LOSNumRooms;
extern BOOL g_IsDemoLevelType;
extern BOOL g_IsDemoLoaded;
extern int32_t g_BoundStart;
extern int32_t g_BoundEnd;
extern int32_t g_IsAssaultTimerDisplay;
extern BOOL g_IsAssaultTimerActive;
extern BOOL g_IsMonkAngry;
extern TEXTSTRING *g_AmmoTextInfo;
extern TEXTSTRING *g_DisplayModeTextInfo;
extern DWORD g_DisplayModeInfoTimer;
extern UINT16 g_Inv_MainCurrent;
extern UINT16 g_Inv_KeyObjectsCount;
extern UINT16 g_Inv_KeysCurrent;
extern UINT16 g_Inv_OptionCurrent;
extern TEXTSTRING *g_Inv_RingText;
extern TEXTSTRING *g_Inv_UpArrow1;
extern TEXTSTRING *g_Inv_UpArrow2;
extern TEXTSTRING *g_Inv_DownArrow1;
extern TEXTSTRING *g_Inv_DownArrow2;
extern uint16_t g_Inv_IsActive;
extern BOOL g_Inv_DemoMode;
extern BOOL g_Inv_IsOptionsDelay;
extern int32_t g_Inv_OptionsDelayCounter;
extern uint16_t g_SoundOptionLine;
extern REQUEST_INFO g_StatsRequester;
extern ASSAULT_STATS g_Assault;
extern int32_t g_LevelItemCount;
extern int32_t g_HealthBarTimer;
extern int32_t g_SoundTrackIds[128];
extern int32_t g_MinWindowClientWidth;
extern int32_t g_MinWindowClientHeight;
extern int32_t g_MinWindowWidth;
extern int32_t g_MinWindowHeight;
extern bool g_IsMinWindowSizeSet;
extern int32_t g_MaxWindowClientWidth;
extern HWND g_GameWindowHandle;
extern uint32_t g_LockedBufferCount;
extern int32_t g_MaxWindowClientHeight;
extern int32_t g_MaxWindowWidth;
extern int32_t g_MaxWindowHeight;
extern bool g_IsMaxWindowSizeSet;
extern uint32_t g_AppResultCode;
extern uint8_t g_IsGameToExit;
extern uint8_t g_IsSoundEnabled;
extern int32_t g_IsFMVPlaying;
extern int32_t g_CurrentLevel;
extern int32_t g_LevelComplete;
extern char *g_GameBuf_MemBase;
extern char *g_CmdLine;
extern RGB_888 g_GamePalette8[256];
extern int32_t g_CD_LoopTrack;
extern int32_t g_SoundIsActive;
extern SAVEGAME_INFO g_SaveGame;
extern LARA_INFO g_Lara;
extern ITEM *g_LaraItem;
extern int16_t g_NextItemFree;
extern int16_t g_NextItemActive;
extern int16_t g_PrevItemActive;
extern PICKUP_INFO g_Pickups[12];
extern GAME_FLOW g_GameFlow;
extern int32_t g_SoundEffectCount;
extern OBJECT g_Objects[265];
extern int16_t **g_Meshes;
extern int32_t g_IMFrac;
extern ANIM *g_Anims;
extern int32_t *g_AnimBones;
extern int32_t g_RoomCount;
extern int32_t g_IMRate;
extern ROOM *g_Rooms;
extern int32_t g_FlipStatus;
extern int16_t *g_Legacy_TriggerIndex;
extern int32_t g_LOSRooms[];
extern ITEM *g_Items;
extern int16_t g_NumCineFrames;
extern CINE_FRAME *g_CineData;
extern PHD_3DPOS g_CinePos;
extern int16_t g_CineFrameIdx;
extern CAMERA_INFO g_Camera;
extern BOX_INFO *g_Boxes;
extern BOOL g_IsTitleLoaded;
extern int32_t g_Inv_ExtraData[8];
extern int32_t g_MessageLoopCounter;
extern bool g_IsGameWindowActive;
extern int16_t *g_FlyZone[2];
extern int16_t *g_GroundZone[][2];
extern uint16_t *g_Overlap;
extern CREATURE *g_BaddieSlots;
extern int32_t g_DynamicLightCount;
extern int32_t g_OriginalRoom;
extern INVENTORY_ITEM *g_Inv_MainList[];
extern INVENTORY_ITEM *g_Inv_KeysList[];
extern int32_t g_Inv_NFrames;
extern STATIC_INFO g_StaticObjects[MAX_STATIC_OBJECTS];
extern OBJECT_VECTOR *g_SoundEffects;
extern int16_t g_SampleLUT[];
extern SAMPLE_INFO *g_SampleInfos;
extern int32_t g_HeightType;
extern int16_t *g_Legacy_FloorData;
extern int16_t *g_AnimCommands;
extern ANIM_CHANGE *g_AnimChanges;
extern ANIM_RANGE *g_AnimRanges;
extern int32_t g_FlipMaps[MAX_FLIP_MAPS];
extern int32_t g_Outside;
extern int32_t g_OutsideRight;
extern int32_t g_OutsideLeft;
extern int32_t g_OutsideTop;
extern int32_t g_OutsideBottom;
extern int32_t g_BoundRooms[MAX_BOUND_ROOMS];
extern PORTAL_VBUF g_DoorVBuf[4];
extern int32_t g_BoxLines[12][2];
extern BOOL g_CameraUnderwater;
extern int32_t g_BoxCount;
extern int32_t g_SlotsUsed;
extern int32_t g_TexturePageCount;
extern int16_t *g_MeshBase;
extern int32_t g_TextureInfoCount;
extern uint8_t g_LabTextureUVFlag[MAX_TEXTURES];
extern FRAME_INFO *g_AnimFrames;
extern int32_t g_IsWet;
extern uint8_t g_DepthQIndex[256];
extern int32_t g_NumCameras;
extern int16_t *g_AnimTextureRanges;
extern int16_t g_CineLoaded;
extern uint32_t *g_DemoPtr;
extern int32_t g_DemoCount;
extern int32_t g_NumSampleInfos;
extern int32_t g_LevelFilePalettesOffset;
extern int32_t g_LevelFileTexPagesOffset;
extern char g_LevelFileName[256];
extern uint16_t g_MusicTrackFlags[64];
extern WEAPON_INFO g_Weapons[];
extern int16_t g_FinalBossActive;
extern int16_t g_FinalLevelCount;
extern int16_t g_FinalBossCount;
extern int16_t g_FinalBossItem[5];
extern INVENTORY_ITEM g_Inv_Item_Stopwatch;
extern INVENTORY_ITEM g_Inv_Item_Pistols;
extern INVENTORY_ITEM g_Inv_Item_Flare;
extern INVENTORY_ITEM g_Inv_Item_Shotgun;
extern INVENTORY_ITEM g_Inv_Item_Magnums;
extern INVENTORY_ITEM g_Inv_Item_Uzis;
extern INVENTORY_ITEM g_Inv_Item_Harpoon;
extern INVENTORY_ITEM g_Inv_Item_M16;
extern INVENTORY_ITEM g_Inv_Item_Grenade;
extern INVENTORY_ITEM g_Inv_Item_PistolAmmo;
extern INVENTORY_ITEM g_Inv_Item_ShotgunAmmo;
extern INVENTORY_ITEM g_Inv_Item_MagnumAmmo;
extern INVENTORY_ITEM g_Inv_Item_UziAmmo;
extern INVENTORY_ITEM g_Inv_Item_HarpoonAmmo;
extern INVENTORY_ITEM g_Inv_Item_M16Ammo;
extern INVENTORY_ITEM g_Inv_Item_GrenadeAmmo;
extern INVENTORY_ITEM g_Inv_Item_SmallMedi;
extern INVENTORY_ITEM g_Inv_Item_LargeMedi;
extern INVENTORY_ITEM g_Inv_Item_Pickup1;
extern INVENTORY_ITEM g_Inv_Item_Pickup2;
extern INVENTORY_ITEM g_Inv_Item_Puzzle1;
extern INVENTORY_ITEM g_Inv_Item_Puzzle2;
extern INVENTORY_ITEM g_Inv_Item_Puzzle3;
extern INVENTORY_ITEM g_Inv_Item_Puzzle4;
extern INVENTORY_ITEM g_Inv_Item_Key1;
extern INVENTORY_ITEM g_Inv_Item_Key2;
extern INVENTORY_ITEM g_Inv_Item_Key3;
extern INVENTORY_ITEM g_Inv_Item_Key4;
extern INVENTORY_ITEM g_Inv_Item_Passport;
extern INVENTORY_ITEM g_Inv_Item_Graphics;
extern INVENTORY_ITEM g_Inv_Item_Sound;
extern INVENTORY_ITEM g_Inv_Item_Controls;
extern INVENTORY_ITEM g_Inv_Item_Photo;
extern REQUEST_INFO g_LoadGameRequester;
extern REQUEST_INFO g_SaveGameRequester;

extern char **g_GF_CutsceneFileNames;
extern char **g_GF_FMVFilenames;
extern char **g_GF_GameStrings;
extern char **g_GF_Key1Strings;
extern char **g_GF_Key2Strings;
extern char **g_GF_Key3Strings;
extern char **g_GF_Key4Strings;
extern char **g_GF_LevelFileNames;
extern char **g_GF_LevelNames;
extern char **g_GF_PCStrings;
extern char **g_GF_PicFilenames;
extern char **g_GF_Pickup1Strings;
extern char **g_GF_Pickup2Strings;
extern char **g_GF_Puzzle1Strings;
extern char **g_GF_Puzzle2Strings;
extern char **g_GF_Puzzle3Strings;
extern char **g_GF_Puzzle4Strings;
extern char **g_GF_TitleFileNames;
extern char *g_GF_CutsceneFileNamesBuf;
extern char *g_GF_FMVFilenamesBuf;
extern char *g_GF_GameStringsBuf;
extern char *g_GF_Key1StringsBuf;
extern char *g_GF_Key2StringsBuf;
extern char *g_GF_Key3StringsBuf;
extern char *g_GF_Key4StringsBuf;
extern char *g_GF_LevelFileNamesBuf;
extern char *g_GF_LevelNamesBuf;
extern char *g_GF_PCStringsBuf;
extern char *g_GF_PicFilenamesBuf;
extern char *g_GF_Pickup1StringsBuf;
extern char *g_GF_Pickup2StringsBuf;
extern char *g_GF_Puzzle1StringsBuf;
extern char *g_GF_Puzzle2StringsBuf;
extern char *g_GF_Puzzle3StringsBuf;
extern char *g_GF_Puzzle4StringsBuf;
extern char *g_GF_TitleFileNamesBuf;
extern char g_GF_Add2InvItems[GF_ADD_INV_NUMBER_OF];
extern char g_GF_Description[256];
extern char g_GF_Kill2Complete;
extern char g_GF_SecretInvItems[GF_ADD_INV_NUMBER_OF];

extern bool g_GF_DeadlyWater;
extern bool g_GF_SunsetEnabled;
extern bool g_GF_RemoveAmmo;
extern bool g_GF_RemoveWeapons;
extern int16_t *g_GF_FrontendSequence;
extern int16_t *g_GF_ScriptTable[MAX_LEVELS];
extern int16_t *g_GF_SequenceBuf;
extern int16_t g_GF_LevelOffsets[200];
extern int16_t g_GF_MusicTracks[16];
extern int16_t g_GF_NoFloor;
extern int16_t g_GF_NumSecrets;
extern int16_t g_GF_ValidDemos[MAX_DEMO_FILES];
extern int32_t g_GF_LaraStartAnim;
extern int32_t g_GF_ScriptVersion;

extern GAMEMODE g_GameMode;
extern TEXTSTRING *g_Inv_ItemText[IT_NUMBER_OF];
extern TEXTSTRING *g_Inv_LevelText;
extern TEXTSTRING *g_Inv_TagText;
extern int32_t g_SavedGames;
extern TEXTSTRING *g_PasswordText1;
extern int32_t g_PassportMode;
extern TEXTSTRING *g_SoundText[4];
extern char g_ValidLevelStrings1[MAX_LEVELS][50];
extern char g_ValidLevelStrings2[MAX_LEVELS][50];
extern uint32_t g_RequesterFlags1[MAX_REQUESTER_ITEMS];
extern uint32_t g_RequesterFlags2[MAX_REQUESTER_ITEMS];
extern uint32_t g_SaveGameReqFlags1[MAX_REQUESTER_ITEMS];
extern uint32_t g_SaveGameReqFlags2[MAX_REQUESTER_ITEMS];
extern int32_t g_SaveCounter;
extern int16_t g_SavedLevels[MAX_LEVELS];
extern int16_t g_Inv_MainQtys[];
extern int16_t g_Inv_KeysQtys[];
extern uint16_t g_InvColors[INV_COLOR_NUMBER_OF];
extern int16_t g_MovableBlockBounds[];
extern int16_t g_ZiplineHandleBounds[];
extern int16_t g_PickupBounds[];
extern int16_t g_GongBounds[];
extern int16_t g_PickupBoundsUW[];
extern int16_t g_SwitchBounds[];
extern int16_t g_SwitchBoundsUW[];
extern int16_t g_KeyholeBounds[];
extern int16_t g_PuzzleHoleBounds[];
extern XYZ_32 g_ZiplineHandlePosition;
extern XYZ_32 g_PickupPosition;
extern XYZ_32 g_PickupPositionUW;
extern XYZ_32 g_SmallSwitchPosition;
extern XYZ_32 g_PushSwitchPosition;
extern XYZ_32 g_AirlockPosition;
extern XYZ_32 g_SwitchUWPosition;
extern XYZ_32 g_KeyholePosition;
extern XYZ_32 g_PuzzleHolePosition;
extern XYZ_32 g_InteractPosition;
extern XYZ_32 g_DetonatorPosition;
extern size_t g_GameBuf_MemCap;
extern char *g_GameBuf_MemPtr;
extern size_t g_GameBuf_MemUsed;
extern size_t g_GameBuf_MemFree;
extern RGB_888 g_PicturePalette[256];
extern bool g_DetonateAllMines;
extern int32_t g_SavegameBufPos;
extern char *g_SavegameBufPtr;
extern ROOM_LIGHT_TABLE g_RoomLightTables[WIBBLE_SIZE];
extern LIGHT g_DynamicLights[MAX_DYNAMIC_LIGHTS];
extern int32_t g_RoomLightShades[4];
extern int32_t g_SunsetTimer;
